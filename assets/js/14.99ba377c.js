(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{372:function(s,e,a){"use strict";a.r(e);var t=a(42),n=Object(t.a)({},(function(){var s=this,e=s.$createElement,a=s._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"nodejs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nodejs"}},[s._v("#")]),s._v(" Nodejs")]),s._v(" "),a("h2",{attrs:{id:"如何处理es6模块；"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何处理es6模块；"}},[s._v("#")]),s._v(" 如何处理ES6模块；")]),s._v(" "),a("h3",{attrs:{id:"es6-模块和-commonjs-模块的差异"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块和-commonjs-模块的差异"}},[s._v("#")]),s._v(" ES6 模块和 CommonJS 模块的差异")]),s._v(" "),a("ul",[a("li",[s._v("语法上面，CommonJS 模块使用require()加载和module.exports输出，ES6 模块使用import和export。")]),s._v(" "),a("li",[s._v("用法上面，require()是同步加载，后面的代码必须等待这个命令执行完，才会执行。import命令则是异步加载，或者更准确地说，ES6 模块有一个独立的静态解析阶段，依赖关系的分析是在那个阶段完成的，最底层的模块第一个执行。")])]),s._v(" "),a("h3",{attrs:{id:"node-js-的区分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#node-js-的区分"}},[s._v("#")]),s._v(" Node.js 的区分")]),s._v(" "),a("ul",[a("li",[a("p",[s._v('Node.js 要求 ES6 模块采用.mjs后缀文件名。也就是说，只要脚本文件里面使用import或者export命令，那么就必须采用.mjs后缀名。Node.js 遇到.mjs文件，就认为它是 ES6 模块，默认启用严格模式，不必在每个模块文件顶部指定"use strict"。')])]),s._v(" "),a("li",[a("p",[s._v("如果不希望将后缀名改成.mjs，可以在项目的package.json文件中，指定type字段为module。")])])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('{\n   "type": "module"\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("一旦设置了以后，该目录里面的 JS 脚本，就被解释用 ES6 模块。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("# 解释成 ES6 模块\n$ node my-app.js\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果这时还要使用 CommonJS 模块，那么需要将 CommonJS 脚本的后缀名都改成.cjs。如果没有type字段，或者type字段为commonjs，则.js脚本会被解释成 CommonJS 模块。")]),s._v(" "),a("p",[a("strong",[s._v("总结为一句话：.mjs文件总是以 ES6 模块加载，.cjs文件总是以 CommonJS 模块加载，.js文件的加载取决于package.json里面type字段的设置。")])]),s._v(" "),a("p",[s._v("注意，ES6 模块与 CommonJS 模块尽量不要混用。require命令不能加载.mjs文件，会报错，只有import命令才可以加载.mjs文件。反过来，.mjs文件里面也不能使用require命令，必须使用import。")]),s._v(" "),a("h3",{attrs:{id:"commonjs-模块加载-es6-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commonjs-模块加载-es6-模块"}},[s._v("#")]),s._v(" CommonJS 模块加载 ES6 模块")]),s._v(" "),a("p",[s._v("CommonJS 的require()命令不能加载 ES6 模块，会报错，只能使用import()这个方法加载。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("(async () => {\n  await import('./my-app.mjs');\n})();\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("上面代码可以在 CommonJS 模块中运行。")]),s._v(" "),a("p",[s._v("require()不支持 ES6 模块的一个原因是，它是同步加载，而 ES6 模块内部可以使用顶层await命令，导致无法被同步加载。")]),s._v(" "),a("h3",{attrs:{id:"es6-模块加载-commonjs-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#es6-模块加载-commonjs-模块"}},[s._v("#")]),s._v(" ES6 模块加载 CommonJS 模块")]),s._v(" "),a("p",[s._v("ES6 模块的import命令可以加载 CommonJS 模块，但是只能整体加载，不能只加载单一的输出项。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// 正确\nimport packageMain from 'commonjs-package';\n\n// 报错\nimport { method } from 'commonjs-package';\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("这是因为 ES6 模块需要支持静态代码分析，而 CommonJS 模块的输出接口是module.exports，是一个对象，无法被静态分析，所以只能整体加载。")]),s._v(" "),a("p",[s._v("加载单一的输出项，可以写成下面这样。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import packageMain from 'commonjs-package';\nconst { method } = packageMain;\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h3",{attrs:{id:"同时支持两种格式的模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#同时支持两种格式的模块"}},[s._v("#")]),s._v(" 同时支持两种格式的模块")]),s._v(" "),a("p",[s._v("一个模块同时要支持 CommonJS 和 ES6 两种格式，也很容易。")]),s._v(" "),a("p",[s._v("如果原始模块是 ES6 格式，那么需要给出一个整体输出接口，比如export default obj，使得 CommonJS 可以用import()进行加载。")]),s._v(" "),a("p",[s._v("如果原始模块是 CommonJS 格式，那么可以加一个包装层。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import cjsModule from '../index.js';\nexport const foo = cjsModule.foo; \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("上面代码先整体输入 CommonJS 模块，然后再根据需要输出具名接口。")]),s._v(" "),a("p",[s._v('你可以把这个文件的后缀名改为.mjs，或者将它放在一个子目录，再在这个子目录里面放一个单独的package.json文件，指明{ type: "module" }。')]),s._v(" "),a("p",[s._v("另一种做法是在package.json文件的exports字段，指明两种格式模块各自的加载入口。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('"exports"：{ \n    "require": "./index.js"，\n    "import": "./esm/wrapper.js" \n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("上面代码指定require()和import，加载该模块会自动切换到不一样的入口文件。")])])}),[],!1,null,null,null);e.default=n.exports}}]);