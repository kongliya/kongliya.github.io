(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{384:function(s,a,n){"use strict";n.r(a);var e=n(42),t=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"打包工具-rollup-js"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打包工具-rollup-js"}},[s._v("#")]),s._v(" 打包工具 rollup.js")]),s._v(" "),n("h2",{attrs:{id:"作用："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用："}},[s._v("#")]),s._v(" 作用：")]),s._v(" "),n("p",[s._v("打包工具的作用是，将多个 JavaScript 脚本合并成一个脚本，供浏览器使用。")]),s._v(" "),n("p",[s._v("浏览器需要脚本打包，主要原因有三个。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("（1）早期的浏览器不支持模块，大型网页项目只能先合并成单一脚本再执行。\n\n（2）Node.js 的模块机制与浏览器不兼容，必须通过打包工具进行兼容处理。\n\n（3）浏览器加载一个大脚本，要比加载多个小脚本，性能更好。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("目前，最常用的打包工具是 Webpack。它的功能强大，但是难学难用，一直被人诟病。")]),s._v(" "),n("p",[s._v("rollup.js 的开发本意，是打造一款简单易用的 ES 模块打包工具，不必配置，直接使用。这一点，它确实做到了。")]),s._v(" "),n("p",[s._v("后来经过不断发展，它也可以打包 CommonJS 模块。但是，这时需要经过复杂配置，实际上并没有比 Webpack 简单多少。")]),s._v(" "),n("p",[s._v("因此建议，只把 rollup.js 用于打包 ES 模块，这样才能充分发挥它的优势。下面你会看到，那是多么简单的一件事。")]),s._v(" "),n("p",[s._v("如果你的项目使用 CommonJS 模块，不推荐使用 rollup.js，优势不大。")]),s._v(" "),n("h2",{attrs:{id:"安装："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装："}},[s._v("#")]),s._v(" 安装：")]),s._v(" "),n("p",[s._v("采用全局安装 rollup.js：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("npm install --global rollup\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("但是，你也可以不安装直接使用，就是把下面所有命令中的rollup，替换成npx rollup（"),n("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2019/02/npx.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("参见《npx 使用教程》"),n("OutboundLink")],1),s._v("）。")]),s._v(" "),n("p",[s._v("第一次使用，可以运行下面的命令，查看一下帮助。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup --help\n# 或者\n$ npx rollup --help\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("h2",{attrs:{id:"例子："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#例子："}},[s._v("#")]),s._v(" 例子：")]),s._v(" "),n("p",[s._v("用 rollup.js 打包两个简单的脚本：库文件 add.js 和入口脚本 main.js。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// add.js\nconst PI = 3.14;\nconst E = 2.718;\n\nexport function addPi(x) {\n  return x + PI;\n}\n\nexport function addE(x) {\n  return x + E; \n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("上面代码中，模块 add.js 输出了两个工具函数addPi()和addE()。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// main.js\nimport { addPi } from './add.js';\n\nconsole.log(addPi(10));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("上面代码中，入口脚本 main.js 加载了 add.js 里面的工具函数addPi()。")]),s._v(" "),n("p",[s._v("接着，就用 rollup.js 打包。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup main.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("打包时只需给出入口脚本 main.js，rollup 会自动把依赖项打包进去。")]),s._v(" "),n("p",[s._v("打包结果默认输出到屏幕。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const PI = 3.14;\n\nfunction addPi(x) {\n  return x + PI;\n}\n\nconsole.log(addPi(10));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("可以看到，import和export语句都没了，被换成了原始代码。")]),s._v(" "),n("p",[s._v("另外，函数addE()没有打包进去，因为没有用到它。这种特性叫做摇树（tree-shaking），即打包时自动删除没有用到的代码。")]),s._v(" "),n("p",[s._v("由于上面两点，rollup 输出的代码非常整洁，而且体积小于其他打包工具。")]),s._v(" "),n("p",[s._v("使用参数--file [FILENAME]，将打包结果保存到指定文件。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup main.js --file bundle.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面命令将打包结果保存到 bundle.js。")]),s._v(" "),n("h2",{attrs:{id:"使用注意点："}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用注意点："}},[s._v("#")]),s._v(" 使用注意点：")]),s._v(" "),n("p",[s._v("（1）如果有多个入口脚本，就依次填写它们的文件名，并使用参数--dir指定输出目录。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup m1.js m2.js --dir dist\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面命令会在目录dist，打包生成多个文件：m1.js、m2.js、以及它们共同的依赖项（如果有的话）。")]),s._v(" "),n("p",[s._v("（2）参数--format iife，会把打包结果放在一个自动执行函数里面。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup main.js --format iife\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("（3）如果希望打包后代码最小化，使用参数--compact。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup main.js --compact\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("另一种方法是使用专门工具。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup main.js | uglifyjs --output bundle.js\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("上面命令分成两步，第一步是 rollup 打包，第二步是 uglifyjs 进行代码最小化，最后写入 bundle.js。")]),s._v(" "),n("p",[s._v("（4）rollup 支持使用配置文件（rollup.config.js），把参数都写在里面，下面是一个例子。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// rollup.config.js\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'es'\n  }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("参数-c启用配置文件。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup -c\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("不推荐使用配置文件，这样会增加额外的复杂性。默认场景下，命令行参数已经够用了，也更容易阅读。")]),s._v(" "),n("h2",{attrs:{id:"转成-commonjs-模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#转成-commonjs-模块"}},[s._v("#")]),s._v(" 转成 CommonJS 模块")]),s._v(" "),n("p",[s._v("最后，rollup 还支持 ES 模块转成 CommonJS 模块，使用参数--format cjs就可以了。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ rollup add.js --format cjs\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("转换后的 CommonJS 模块，代码如下。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst PI = 3.14;\nconst E = 2.718;\n\nfunction addPi(x) {\n  return x + PI;\n}\n\nfunction addE(x) {\n  return x + E; \n}\n\nexports.addE = addE;\nexports.addPi = addPi;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])])])}),[],!1,null,null,null);a.default=t.exports}}]);